/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models


/**
 * 
 * @param id The unique identifier of the upload
 * @param idStr The unique identifier of the upload in string format
 * @param externalId The external identifier of the upload
 * @param error The error associated with this upload
 * @param status The status of this upload
 * @param activityId The identifier of the activity this upload resulted into
 */
data class Upload (

    /* The unique identifier of the upload */
    val id: kotlin.Long? = null,
    /* The unique identifier of the upload in string format */
    val idStr: kotlin.String? = null,
    /* The external identifier of the upload */
    val externalId: kotlin.String? = null,
    /* The error associated with this upload */
    val error: kotlin.String? = null,
    /* The status of this upload */
    val status: kotlin.String? = null,
    /* The identifier of the activity this upload resulted into */
    val activityId: kotlin.Long? = null
) {
}