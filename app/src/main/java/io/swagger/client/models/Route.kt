/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import io.swagger.client.models.PolylineMap
import io.swagger.client.models.SummaryAthlete
import io.swagger.client.models.SummarySegment

/**
 * 
 * @param athlete 
 * @param description The description of the route
 * @param distance The route's distance, in meters
 * @param elevationGain The route's elevation gain.
 * @param id The unique identifier of this route
 * @param map 
 * @param name The name of this route
 * @param &#x60;private&#x60; Whether this route is private
 * @param starred Whether this route is starred by the logged-in athlete
 * @param timestamp An epoch timestamp of when the route was created
 * @param type This route's type (1 for ride, 2 for runs)
 * @param subType This route's sub-type (1 for road, 2 for mountain bike, 3 for cross, 4 for trail, 5 for mixed)
 * @param segments The segments traversed by this route
 */
data class Route (

    val athlete: SummaryAthlete? = null,
    /* The description of the route */
    val description: kotlin.String? = null,
    /* The route's distance, in meters */
    val distance: kotlin.Float? = null,
    /* The route's elevation gain. */
    val elevationGain: kotlin.Float? = null,
    /* The unique identifier of this route */
    val id: kotlin.Int? = null,
    val map: PolylineMap? = null,
    /* The name of this route */
    val name: kotlin.String? = null,
    /* Whether this route is private */
    val `private`: kotlin.Boolean? = null,
    /* Whether this route is starred by the logged-in athlete */
    val starred: kotlin.Boolean? = null,
    /* An epoch timestamp of when the route was created */
    val timestamp: kotlin.Int? = null,
    /* This route's type (1 for ride, 2 for runs) */
    val type: kotlin.Int? = null,
    /* This route's sub-type (1 for road, 2 for mountain bike, 3 for cross, 4 for trail, 5 for mixed) */
    val subType: kotlin.Int? = null,
    /* The segments traversed by this route */
    val segments: kotlin.Array<SummarySegment>? = null
) {
}