/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import io.swagger.client.models.SummaryGear

/**
 * 
 * @param brandName The gear's brand name.
 * @param modelName The gear's model name.
 * @param frameType The gear's frame type (bike only).
 * @param description The gear's description.
 */
data class DetailedGear (

    /* The gear's brand name. */
    val brandName: kotlin.String? = null,
    /* The gear's model name. */
    val modelName: kotlin.String? = null,
    /* The gear's frame type (bike only). */
    val frameType: kotlin.Int? = null,
    /* The gear's description. */
    val description: kotlin.String? = null,
    /* The gear's unique identifier. */
    val id: kotlin.String? = null,
    /* Resource state, indicates level of detail. Possible values: 2 -> \"summary\", 3 -> \"detail\" */
    val resourceState: kotlin.Int? = null,
    /* Whether this gear's is the owner's default one. */
    val primary: kotlin.Boolean? = null,
    /* The gear's name. */
    val name: kotlin.String? = null,
    /* The distance logged with this gear. */
    val distance: kotlin.Float? = null,
    /* The gear's brand name. */
    val brandName: kotlin.String? = null,
    /* The gear's model name. */
    val modelName: kotlin.String? = null,
    /* The gear's frame type (bike only). */
    val frameType: kotlin.Int? = null,
    /* The gear's description. */
    val description: kotlin.String? = null
) {
}