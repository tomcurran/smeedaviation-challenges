/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models


/**
 * 
 * @param file The uploaded file.
 * @param name The desired name of the resulting activity.
 * @param description The desired description of the resulting activity.
 * @param trainer Whether the resulting activity should be marked as having been performed on a trainer.
 * @param commute Whether the resulting activity should be tagged as a commute.
 * @param dataType The format of the uploaded file.
 * @param externalId The desired external identifier of the resulting activity.
 */
data class Body2 (

    /* The uploaded file. */
    val file: kotlin.Array<kotlin.Byte>? = null,
    /* The desired name of the resulting activity. */
    val name: kotlin.String? = null,
    /* The desired description of the resulting activity. */
    val description: kotlin.String? = null,
    /* Whether the resulting activity should be marked as having been performed on a trainer. */
    val trainer: kotlin.String? = null,
    /* Whether the resulting activity should be tagged as a commute. */
    val commute: kotlin.String? = null,
    /* The format of the uploaded file. */
    val dataType: Body2.DataType? = null,
    /* The desired external identifier of the resulting activity. */
    val externalId: kotlin.String? = null
) {
    /**
    * The format of the uploaded file.
    * Values: fit,fitPeriodgz,tcx,tcxPeriodgz,gpx,gpxPeriodgz
    */
    enum class DataType(val value: kotlin.String){
        fit("fit"),
        fitPeriodgz("fit.gz"),
        tcx("tcx"),
        tcxPeriodgz("tcx.gz"),
        gpx("gpx"),
        gpxPeriodgz("gpx.gz");
    }
}