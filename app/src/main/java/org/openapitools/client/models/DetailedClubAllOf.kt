/**
* Strava API v3
* The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
*
* The version of the OpenAPI document: 3.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models


import com.squareup.moshi.Json
/**
 * 
 * @param membership The membership status of the logged-in athlete.
 * @param admin Whether the currently logged-in athlete is an administrator of this club.
 * @param owner Whether the currently logged-in athlete is the owner of this club.
 * @param followingCount The number of athletes in the club that the logged-in athlete follows.
 */

data class DetailedClubAllOf (
    /* The membership status of the logged-in athlete. */
    @Json(name = "membership")
    val membership: DetailedClubAllOf.Membership? = null,
    /* Whether the currently logged-in athlete is an administrator of this club. */
    @Json(name = "admin")
    val admin: kotlin.Boolean? = null,
    /* Whether the currently logged-in athlete is the owner of this club. */
    @Json(name = "owner")
    val owner: kotlin.Boolean? = null,
    /* The number of athletes in the club that the logged-in athlete follows. */
    @Json(name = "following_count")
    val followingCount: kotlin.Int? = null
) {

    /**
    * The membership status of the logged-in athlete.
    * Values: member,pending
    */
    
    enum class Membership(val value: kotlin.String){
        @Json(name = "member") member("member"),
        @Json(name = "pending") pending("pending");
    }
}

