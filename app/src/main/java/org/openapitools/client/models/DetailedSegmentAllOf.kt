/**
* Strava API v3
* The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
*
* The version of the OpenAPI document: 3.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.PolylineMap

import com.squareup.moshi.Json
/**
 * 
 * @param createdAt The time at which the segment was created.
 * @param updatedAt The time at which the segment was last updated.
 * @param totalElevationGain The segment's total elevation gain.
 * @param map 
 * @param effortCount The total number of efforts for this segment
 * @param athleteCount The number of unique athletes who have an effort for this segment
 * @param hazardous Whether this segment is considered hazardous
 * @param starCount The number of stars for this segment
 */

data class DetailedSegmentAllOf (
    /* The time at which the segment was created. */
    @Json(name = "created_at")
    val createdAt: java.time.OffsetDateTime? = null,
    /* The time at which the segment was last updated. */
    @Json(name = "updated_at")
    val updatedAt: java.time.OffsetDateTime? = null,
    /* The segment's total elevation gain. */
    @Json(name = "total_elevation_gain")
    val totalElevationGain: kotlin.Float? = null,
    @Json(name = "map")
    val map: PolylineMap? = null,
    /* The total number of efforts for this segment */
    @Json(name = "effort_count")
    val effortCount: kotlin.Int? = null,
    /* The number of unique athletes who have an effort for this segment */
    @Json(name = "athlete_count")
    val athleteCount: kotlin.Int? = null,
    /* Whether this segment is considered hazardous */
    @Json(name = "hazardous")
    val hazardous: kotlin.Boolean? = null,
    /* The number of stars for this segment */
    @Json(name = "star_count")
    val starCount: kotlin.Int? = null
)

